cmake_minimum_required(VERSION 3.12)
# 设置工程属性  开发 语言
project(MiniC VERSION 1.0.0.0 LANGUAGES CXX)


# ------------------ flex bison工具相关设置
# 查找flex工具
find_package(FLEX REQUIRED)
message("------The FLEX Info:")  #输出信息
message("FLEX_FOUND?:--"${FLEX_FOUND})
message("FLEX_EXECUTABLE:--"${FLEX_EXECUTABLE})
message("FLEX_LIBRARIES:--"${FLEX_LIBRARIES})
#  检查查找的flex是否为win_flex  考虑不同平台
string(FIND ${FLEX_EXECUTABLE} "win_flex.exe" result)
if(NOT ${result} EQUAL -1) # 查找到 为win_flex
    set(WINFLEX_FOUND True)
else()
    set(WINFLEX_FOUND False) #未查找到
endif()


# 查找bison工具
find_package(BISON REQUIRED)
message("------THE BISON Info:")
message("BISON_FOUND?:--"${BISON_FOUND})
message("BISON_EXECUTABLE:--"${BISON_EXECUTABLE})
message("BISON_LIBRARIES:--"${BISON_LIBRARIES})
# 检查是否为win_bison 考虑多平台
string(FIND ${BISON_EXECUTABLE} "win_bison.exe" result)
if(NOT ${result} EQUAL -1) #为win_bison
    set(WINBISON_FOUND True)
else()
    set(WINBISON_FOUND False)
endif()


# flex工具的输入输出控制 
set(FLEX_GEN_DIR ${CMAKE_CURRENT_SOURCE_DIR}/frontend/autogenerated) #设置flex产生文件夹
set(FLEX_INPUT     #设置输入的词法分析文件
    ${CMAKE_CURRENT_SOURCE_DIR}/frontend/MiniC.l 
)
set(FLEX_OUTPUT    #设置输出的生成文件路径
    ${FLEX_GEN_DIR}/MiniCFlex.cpp
    ${FLEX_GEN_DIR}/MiniCFlex.h
)

# bison工具输入输出设置
set(BISON_GEN_DIR ${CMAKE_CURRENT_SOURCE_DIR}/frontend/autogenerated)
set(BISON_INPUT 
    ${CMAKE_CURRENT_SOURCE_DIR}/frontend/MiniC.y
)
set(BISON_OUTPUT
    ${BISON_GEN_DIR}/MiniCBison.cpp
    ${BISON_GEN_DIR}/MiniCBison.h
)

# windows系统下flex减小差异
if(CMAKE_HOST_WIN32)
    if(WINFLEX_FOUND)
        set(FLEX_OPTION "--wincompat")
    else()
        set(FLEX_OPTION "--nounistd")
    endif()
else()
    set(FLEX_OPTION "")
endif()
# 通过flex工具产生词法分析源代码
add_custom_command(
    OUTPUT
    ${FLEX_OUTPUT}
    COMMAND
    ${FLEX_EXECUTABLE} ${FLEX_OPTION} -o MiniCFlex.cpp --header-file=MiniCFlex.h ../MiniC.l
    DEPENDS
    ${FLEX_INPUT}
    COMMENT #在构建时打印状态消息
    "Unpacking C++ wrappers for BLAS/LAPACK"
    WORKING_DIRECTORY
    ${FLEX_GEN_DIR}
)

# 跨平台windows，linux设置bison选项名
if(CMAKE_HOST_WIN32) #windows
    if(WINBISON_FOUND)
      set(BISON_HEADFILE_OPTION "--defines")
    else()
      set(BISON_HEADFILE_OPTION "--header")
    endif()
else()
    set(BISON_HEADFILE_OPTION "--defines")  #linux
endif()

# 通过Bison工具产生语法分析源代码
add_custom_command(
    OUTPUT
    ${BISON_OUTPUT}
    COMMAND
    ${BISON_EXECUTABLE} -d --debug -o MiniCBison.cpp ${BISON_HEADFILE_OPTION}=MiniCBison.h ../MiniC.y
    DEPENDS
    ${BISON_INPUT}
    WORKING_DIRECTORY
    ${BISON_GEN_DIR}
)
